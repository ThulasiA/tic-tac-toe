{"version":3,"sources":["components/Square.js","components/Board.js","components/Game.js","index.js"],"names":["Square","props","react_default","a","createElement","className","onClick","value","Board","i","_this","this","components_Square","squares","row","j","push","renderSquare","key","React","Component","calculateWinner","lines","length","_lines$i","Object","slicedToArray","b","c","Game","state","history","Array","fill","stepNumber","xIsNext","isAscending","slice","setState","concat","location","step","status","_this2","current","winner","moves","map","move","desc","classname","hopTo","reverse","components_Board","handleClick","handleToggle","ReactDOM","render","components_Game","document","getElementById"],"mappings":"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","file":"static/js/main.7667a4e6.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nfunction Square(props) {\r\n  return (\r\n    <button className=\"square\" onClick={props.onClick}>\r\n      {props.value}\r\n    </button>\r\n  );\r\n}\r\n\r\nexport default Square;\r\n","import React from \"react\";\r\nimport Square from \"./Square\";\r\n\r\nclass Board extends React.Component {\r\n  renderSquare(i) {\r\n    return (\r\n      <Square\r\n        value={this.props.squares[i]}\r\n        onClick={() => this.props.onClick(i)}\r\n      />\r\n    );\r\n  }\r\n\r\n  render() {\r\n    // Refactoring - Turning hard coded renderSquare to 2 for loops\r\n    let squares = [];\r\n    for (let i = 0; i < 3; i++) {\r\n      let row = [];\r\n      for (let j = 0; j < 3; j++) {\r\n        row.push(this.renderSquare(i * 3 + j));\r\n      }\r\n      squares.push(\r\n        <div key={i} className=\"board-row\">\r\n          {row}\r\n        </div>\r\n      );\r\n    }\r\n    return <div> {squares} </div>;\r\n  }\r\n}\r\n\r\nexport default Board;\r\n","import React from \"react\";\r\nimport Board from \"./Board\";\r\n\r\nclass Game extends React.Component {\r\n  /* Refactoring state to React 16 */\r\n\r\n  state = {\r\n    history: [\r\n      {\r\n        squares: Array(9).fill(null)\r\n      }\r\n    ],\r\n    stepNumber: 0,\r\n    xIsNext: true,\r\n    isAscending: true\r\n  };\r\n\r\n  // constructor(props) {\r\n  //   super(props);\r\n  //   this.state = {\r\n  //     history: [\r\n  //       {\r\n  //         squares: Array(9).fill(null)\r\n  //       }\r\n  //     ],\r\n  //     stepNumber: 0,\r\n  //     xIsNext: true\r\n  //   };\r\n  // }\r\n\r\n  handleClick(i) {\r\n    const history = this.state.history.slice(0, this.state.stepNumber + 1);\r\n    const current = history[history.length - 1];\r\n    const squares = current.squares.slice();\r\n    const locations = [\r\n      [1, 1],\r\n      [2, 1],\r\n      [3, 1],\r\n      [1, 2],\r\n      [2, 2],\r\n      [3, 2],\r\n      [1, 3],\r\n      [2, 3],\r\n      [3, 3]\r\n    ];\r\n    if (calculateWinner(squares) || squares[i]) {\r\n      return;\r\n    }\r\n    squares[i] = this.state.xIsNext ? \"X\" : \"O\";\r\n    this.setState({\r\n      history: history.concat([{ squares: squares, location: locations[i] }]),\r\n      stepNumber: history.length,\r\n      xIsNext: !this.state.xIsNext\r\n    });\r\n  }\r\n\r\n  hopTo(step) {\r\n    this.setState({\r\n      stepNumber: step,\r\n      xIsNext: step % 2 === 0\r\n    });\r\n  }\r\n\r\n  handleToggle() {\r\n    this.setState({\r\n      isAscending: !this.state.isAscending\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const history = this.state.history;\r\n    const current = history[this.state.stepNumber]; //history[history.length - 1];\r\n    const winner = calculateWinner(current.squares);\r\n\r\n    let status;\r\n\r\n    const moves = history.map((step, move) => {\r\n      const desc = move\r\n        ? `Go to step #${move} at C${history[move].location[0]} R\r\n          ${history[move].location[1]}`\r\n        : `Go back to start`;\r\n      const classname =\r\n        move === this.state.stepNumber ? `button-selected-bold` : `button-move`;\r\n      return (\r\n        <li key={move}>\r\n          <button className={`${classname}`} onClick={() => this.hopTo(move)}>\r\n            {desc}\r\n          </button>\r\n        </li>\r\n      );\r\n    });\r\n\r\n    if (winner) {\r\n      status = \"Winner is \" + winner;\r\n    } else {\r\n      status = \"Next player: \" + (this.state.xIsNext ? \"X\" : \"O\");\r\n    }\r\n\r\n    const isAscending = this.state.isAscending;\r\n    if (!isAscending) {\r\n      moves.reverse();\r\n    }\r\n\r\n    return (\r\n      <div className=\"game\">\r\n        <div className=\"game-board\">\r\n          <Board squares={current.squares} onClick={i => this.handleClick(i)} />\r\n        </div>\r\n        <div className=\"game-info\">\r\n          <div className=\"status\">{status}</div>\r\n          <button className=\"btn-toggle\" onClick={() => this.handleToggle()}>\r\n            {isAscending ? \"Sort Descendingly\" : \"Sort Ascendingly\"}\r\n          </button>\r\n          <ol>{moves}</ol>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nfunction calculateWinner(squares) {\r\n  const lines = [\r\n    [0, 1, 2],\r\n    [3, 4, 5],\r\n    [6, 7, 8],\r\n    [0, 3, 6],\r\n    [1, 4, 7],\r\n    [2, 5, 8],\r\n    [0, 4, 8],\r\n    [2, 4, 6]\r\n  ];\r\n\r\n  for (let i = 0; i < lines.length; i++) {\r\n    const [a, b, c] = lines[i];\r\n    if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\r\n      return squares[a];\r\n    }\r\n  }\r\n  return null;\r\n}\r\n\r\nexport default Game;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport Game from './components/Game';\r\nimport \"./index.css\";\r\n\r\n// ========================================\r\n\r\nReactDOM.render(<Game />, document.getElementById(\"root\"));\r\n"],"sourceRoot":""}